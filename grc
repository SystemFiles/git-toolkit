#!/bin/bash
# Git Reset to Commit
# Script will take a commit hash and reset the current branch to that point in time (WARN: this is not safe unless you know what you are doing)

COMMIT_HASH=$1
COMMIT_FILES=${2:@}

if [[ -z $COMMIT_HASH ]]; then
  echo "please provide a commit hash to reset back to ..."
  echo "usage: grc <commit_sha> [files ...]"
  exit 1
fi

# reset specific files to a particular point in time
if [[ ${#COMMIT_FILES[@]} -gt 0 ]]; then
  git checkout $COMMIT_HASH -- ${COMMIT_FILES[@]}
  echo "moved selected files back to $COMMIT_HASH"
  echo "no commit was done to provide an opportunity to review manually"
  exit 0
fi

# reset index in worktree
git reset --hard $COMMIT_HASH

# move branch pointer back to previous head
git reset --soft "HEAD@{1}"

# commit the changes
git commit -m "update(reset): moved branch HEAD back to $COMMIT_HASH"
